[data-color="red"] {
	--accent-base: var(--accent-base--red);
	--accent--dark: oklch(from var(--accent-base--red) 0.8 0.1 h);
}

[data-color="yellow"] {
	--accent-base: var(--accent-base--yellow);
	--accent--dark: oklch(from var(--accent-base--yellow) 0.8 0.1 h);
}

[data-color="green"] {
	--accent-base: var(--accent-base--green);
	--accent--dark: oklch(from var(--accent-base--green) 0.8 0.1 h);
}

[data-color="blue"] {
	--accent-base: var(--accent-base--blue);
	--accent--dark: oklch(from var(--accent-base--blue) 0.8 0.1 h);
}

[data-color="purple"] {
	--accent-base: var(--accent-base--purple);
	--accent--dark: oklch(from var(--accent-base--purple) 0.8 0.1 h);
}

:root,
.map[data-theme="system"][data-always-light="true"] {
	--font-family:
		-apple-system, BlinkMacSystemFont, "Segoe UI Variable", "Segoe UI Variable Text",
		"Segoe UI", system-ui, Roboto, Oxygen-Sans, Ubuntu, Cantarell, "Helvetica Neue", sans-serif,
		"Apple Color Emoji", "Segoe UI Symbol", "Symbola";
	--external-ref-icon--light: url('data:image/svg+xml;charset=UTF-8,<svg width="0.8em" height="0.8em" viewBox="0 0 16 16" xmlns="http://www.w3.org/2000/svg"> <g stroke="black" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round" fill="none"> <polyline points="9,3 3,3 3,13 13,13 13,7" /> <line x1="8" y1="8" x2="15" y2="1" /> <polyline points="11,1 15,1 15,5" /> </g> </svg>');
	--external-ref-icon--dark: url('data:image/svg+xml;charset=UTF-8,<svg width="0.8em" height="0.8em" viewBox="0 0 16 16" xmlns="http://www.w3.org/2000/svg"> <g stroke="white" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round" fill="none"> <polyline points="9,3 3,3 3,13 13,13 13,7" /> <line x1="8" y1="8" x2="15" y2="1" /> <polyline points="11,1 15,1 15,5" /> </g> </svg>');
	font-size: 100%;

	--border-radius--large: 0.5rem;
	--border-radius--small: calc(var(--line-width) / 2);
	--line-width: 4px;
	--line-length: 2rem;
	--line-length--vertical: 1.5rem;
	--connection-width: 24em;
	--height--icon--small: 16px;
	--navbar-space--bottom: calc(1.5rem + max(0.5rem, env(safe-area-inset-bottom)) + 38px);

	--map-filter: none;
	--border: var(--line-width) solid var(--foreground-color--transparent);
	--border--very-transparant: var(--line-width) solid var(--foreground-color--very-transparent);
	--cubic-bezier: cubic-bezier(0.22, 0.61, 0.36, 1);

	accent-color: var(--accent-color);
	color-scheme: light dark;
	--accent-color: light-dark(var(--accent-base), var(--accent--dark));
	--accent--red: light-dark(
		var(--accent-base--red),
		oklch(from var(--accent-base--red) 0.8 0.1 h)
	);
	--accent--yellow: light-dark(
		var(--accent-base--yellow),
		oklch(from var(--accent-base--yellow) 0.8 0.1 h)
	);
	--accent--green: light-dark(
		var(--accent-base--green),
		oklch(from var(--accent-base--green) 0.8 0.1 h)
	);
	--foreground-color: light-dark(
		oklch(from var(--accent-base) 0.25 0.02 h),
		oklch(from var(--accent-base) 0.95 0.002 h)
	);
	--background-color: light-dark(
		oklch(from var(--accent-base) 0.99 0.002 h),
		oklch(from var(--accent-base) 0.15 0.015 h)
	);
	--foreground-color--transparent: oklch(from var(--foreground-color) l c h / 0.12);
	--foreground-color--very-transparent: oklch(from var(--foreground-color) l c h / 0.06);
	--background-color--transparent: oklch(from var(--background-color) l c h / 0.9);

	--accent-base--red: oklch(0.5 0.2 25);
	--accent-base--yellow: oklch(0.79 0.17 70);
	--accent-base--green: oklch(0.5 0.09 170);
	--accent-base--blue: oklch(0.52 0.15 252);
	--accent-base--purple: oklch(0.46 0.14 300);

	--longDistanceExpress-color: var(--foreground-color);
	--longDistance-color: oklch(0.52 0.017 265);
	--regionalExpress-color: oklch(0.75 0.167 65);
	--regional-color: oklch(0.59 0.24 27.5);
	--suburban-color: oklch(0.55 0.1316 140);
	--subway-color: oklch(0.48 0.1797 260);
	--tram-color: oklch(0.53 0.1329 0);
	--bus-color: oklch(0.5 0.1327 315.7);
	--taxi-color: oklch(0.89 0.1827 95.76);
	--ferry-color: oklch(0.66 0.1213 232.8);
}

[data-theme="light"],
[data-theme="system"],
:root:not([data-theme]) {
	color-scheme: light;
	--product-color: var(--foreground-color);

	--external-ref-icon: var(--external-ref-icon--light);
	--external-ref-icon--inverse: var(--external-ref-icon--dark);
}

@media (update: fast) {
	:root[data-theme="dark"],
	:root[data-theme="midnight"] {
		--map-filter: brightness(0.7) invert(1) contrast(3) hue-rotate(200deg) saturate(0.3)
			brightness(0.7);
	}

	@media (prefers-color-scheme: dark) {
		:root[data-theme="system"] {
			--map-filter: brightness(0.7) invert(1) contrast(3) hue-rotate(200deg) saturate(0.3)
				brightness(0.7);
		}
	}
}

[data-theme="dark"],
[data-theme="midnight"] {
	color-scheme: dark;
	--external-ref-icon--inverse: var(--external-ref-icon--light);
	--external-ref-icon: var(--external-ref-icon--dark);
}

@media (prefers-color-scheme: dark) {
	:root:not([data-theme]),
	[data-theme="system"] {
		color-scheme: dark;
		--external-ref-icon--inverse: var(--external-ref-icon--light);
		--external-ref-icon: var(--external-ref-icon--dark);
	}
}

[data-theme="midnight"] {
	--background-color: black;
}

ul,
ol {
	list-style: none;
	padding: 0;
	margin: 0;
}

summary {
	list-style: none;
	cursor: pointer;
}

summary::-webkit-details-marker {
	display: none;
}

details[open] summary::after {
	width: var(--line-length);
}

body {
	font-family: var(--font-family), sans-serif;
	color: var(--foreground-color);
	background-color: var(--background-color);
	margin: 0;
	hyphens: auto;
}

html:has(dialog[open]),
body:has(dialog[open]) {
	overflow: hidden;
}

body,
a,
input,
button {
	transition:
		color 0.4s var(--cubic-bezier),
		background 0.4s var(--cubic-bezier),
		border-color 0.4s var(--cubic-bezier);
}

svg {
	display: block;
	flex-shrink: 0;
	polyline,
	line {
		vector-effect: non-scaling-stroke;
	}
}

svg polyline,
svg line,
svg path,
svg circle {
	transition:
		stroke 0.4s var(--cubic-bezier),
		fill 0.4s var(--cubic-bezier);
}

button {
	cursor: pointer;
}

input,
button {
	background-color: transparent;
	color: var(--foreground-color);
	border: none;
	font: inherit;
	padding: 0;
}

a {
	color: var(--foreground-color);
	&[href^="http"]:not([href*="vahrplan.de"], [href*="http://localhost:"])::after
	{
		content: " " var(--external-ref-icon);
		display: inline-flex;
		vertical-align: middle;
		padding: 0 0.2em;
		flex-shrink: 0;
	}
	.hoverable--accent&[href^="http"]:not([href*="vahrplan.de"], [href*="http://localhost:"])::after
	{
		content: " " var(--external-ref-icon--inverse);
	}
}

select {
	border: none;
	font-size: 1rem;
	background-color: transparent;
	color: var(--foreground-color);
}

header,
h1,
h2,
h3 {
	text-wrap: balance;
}

.inline-icons svg {
	display: inline-block;
	vertical-align: middle;
}

.content-wrapper {
	width: 30rem;
	max-width: 100%;
	box-sizing: border-box;
	margin: 0 auto;
	padding: 0 1rem 0.5rem;
}

.flex-row {
	display: flex;
}

.flex-column {
	display: flex;
	flex-direction: column;
}

.flex-row-column {
	display: flex;
}

.padded-top-bottom {
	padding-top: 0.5rem;
	padding-bottom: 0.5rem;
}

.line--regular {
	background-color: var(--foreground-color);
	border-radius: var(--border-radius--small);
	width: 100%;
	height: var(--line-width);
}

.line--vertical {
	background-color: var(--foreground-color);
	border-radius: var(--border-radius--small);
	height: 100%;
	width: var(--line-width);
	max-width: var(--line-width);
}

.line--accent {
	background-color: var(--accent-color);
	transition: background-color 0.4s var(--cubic-bezier);
	border-radius: var(--border-radius--small);
}

.line--success {
	background-color: var(--accent--green);
}
.text--green,
.text--on-time {
	color: var(--accent--green);
}

.line--neutral {
	background-color: var(--foreground-color);
}

.line--warning {
	background-color: var(--accent-base--yellow);
}
.text--yellow {
	color: var(--accent-base--yellow);
}

.line--error {
	background-color: var(--accent--red);
}
.text--red,
.text--cancelled,
.text--delayed {
	color: var(--accent--red);
}

.line--product {
	background-color: var(--product-color);
}
.stroke--product {
	stroke: var(--product-color);
}

.product--undefined,
.product-- {
	--product-color: transparent;
	--product-color--alt: transparent;
}

.product--suburban {
	--product-color: light-dark(
		var(--suburban-color),
		oklch(from var(--suburban-color) 0.8 0.15 h)
	);
	--product-color--alt: oklch(from var(--suburban-color) 0.8 0.1 h);
}

.product--subway {
	--product-color: light-dark(var(--subway-color), oklch(from var(--subway-color) 0.8 0.15 h));
	--product-color--alt: oklch(from var(--subway-color) 0.8 0.1 h);
}

.product--tram {
	--product-color: light-dark(var(--tram-color), oklch(from var(--tram-color) 0.8 0.15 h));
	--product-color--alt: oklch(from var(--tram-color) 0.8 0.1 h);
}

.product--bus {
	--product-color: light-dark(var(--bus-color), oklch(from var(--bus-color) 0.8 0.15 h));
	--product-color--alt: oklch(from var(--bus-color) 0.8 0.1 h);
}

.product--ferry {
	--product-color: light-dark(var(--ferry-color), oklch(from var(--ferry-color) 0.8 0.15 h));
	--product-color--alt: oklch(from var(--ferry-color) 0.8 0.1 h);
}

.product--taxi {
	--product-color: light-dark(var(--taxi-color), oklch(from var(--taxi-color) 0.8 0.15 h));
	--product-color--alt: oklch(from var(--taxi-color) 1 0.1 h);
}

.product--regional {
	--product-color: light-dark(
		var(--regional-color),
		oklch(from var(--regional-color) 0.8 0.15 h)
	);
	--product-color--alt: oklch(from var(--regional-color) 0.8 0.1 h);
}

.product--regionalExpress {
	--product-color: light-dark(
		var(--regionalExpress-color),
		oklch(from var(--regionalExpress-color) 0.8 0.15 h)
	);
	--product-color--alt: oklch(from var(--regionalExpress-color) 0.8 0.1 h);
}

.product--longDistance {
	--product-color: light-dark(
		var(--longDistance-color),
		oklch(from var(--longDistance-color) 0.7 0.015 h)
	);
	--product-color--alt: oklch(from var(--longDistance-color) 0.8 0.015 h);
}

.product--longDistanceExpress {
	--product-color: var(--foreground-color);
	--product-color--alt: var(--background-color);
}

.hoverable {
	cursor: pointer;
	border-radius: 50vh;
	border: var(--line-width) solid transparent;
	transition: color 0.4s var(--cubic-bezier);
	padding: 0.5rem;
	display: flex;
}

.hoverable--visible {
	background-color: var(--foreground-color--very-transparent);
	border: var(--line-width) solid var(--foreground-color--very-transparent);
}

.hoverable--accent {
	background-color: var(--accent-color);
	color: var(--background-color);
	border: var(--border);
	font-weight: bolder;
	svg {
		--foreground-color: var(--background-color);
	}
}

.hoverable:hover,
.hoverable:active {
	border: var(--line-width) solid var(--foreground-color--transparent);
	background-color: var(--foreground-color--transparent);
}

.hoverable--accent:hover,
.hoverable--accent:active {
	border-color: var(--foreground-color);
	background-color: var(--accent-color);
}

.hoverable--visible--group {
	--base-padding: 0.5rem;
	align-items: stretch;
	button,
	input,
	.hoverable--visible--group--sep {
		border-top: var(--border--very-transparant);
		border-bottom: var(--border--very-transparant);
		background-color: var(--foreground-color--very-transparent);
		padding: 0.5rem calc(var(--base-padding) + var(--line-width));
		transition: none;
		min-height: 100%;
	}
	:where(button, input):hover,
	:where(button, input):active {
		background-color: var(--foreground-color--transparent);
		border: var(--border);
		padding: 0.5rem var(--base-padding);
	}
	> :first-child :where(button, input) {
		border-top-left-radius: 50vh;
		border-bottom-left-radius: 50vh;
		border-left: var(--border--very-transparant);
		padding-left: calc(var(--base-padding) + 0.25rem);
		&:hover,
		&:active {
			border-left-color: var(--foreground-color--transparent);
		}
	}
	> :last-child :where(button, input) {
		border-top-right-radius: 50vh;
		border-bottom-right-radius: 50vh;
		border-right: var(--border--very-transparant);
		padding-right: calc(var(--base-padding) + 0.25rem);
		&:hover,
		&:active {
			border-right-color: var(--foreground-color--transparent);
		}
	}
	> .hoverable--visible--group--sep {
		padding: calc(2 * var(--line-width)) var(--line-width);
		> * {
			width: var(--line-width);
			background-color: var(--foreground-color--transparent);
			height: 100%;
			border-radius: var(--border-radius--small);
		}
	}
}

.hoverable--visible--group--no-side-padding {
	--base-padding: 0rem;
}

.transition {
	height: 0.5rem;
	width: 100%;
	background: linear-gradient(to bottom, var(--background-color--transparent), transparent);
}

.limit-lines {
	display: -webkit-box;
	-webkit-box-orient: vertical;
	overflow: hidden;
}

.skeleton {
	.skeleton-text, .skeleton-stroke {
		animation: skeleton-loading 0.5s linear infinite alternate;
		user-select: none;
		-webkit-user-select: none;
	}
	.skeleton-text {
		border-radius: 50vh;
		background-color: var(--foreground-color--transparent) !important;
		color: transparent;
	}
	.skeleton-stroke {
		stroke: var(--foreground-color--transparent) !important;
	}
}

@keyframes skeleton-loading {
	0% {
		opacity: 1;
	}
	100% {
		opacity: 0.5;
	}
}

@media screen and (max-width: 999px) {
	.desktop-only {
		display: none;
	}
	.flex-row-column {
		flex-direction: column;
	}
}

@media screen and (min-width: 1000px) {
	:root {
		--navbar-space--bottom: 0rem;
	}
	html,
	body {
		margin: 0;
		overscroll-behavior: none;
	}
	.mobile-only {
		display: none;
	}
	.content-wrapper {
		padding-bottom: calc(0.5rem + env(safe-area-inset-bottom));
	}
}
